name: Release
on:
    release:
        types: [ published ]
permissions:
    contents: write
jobs:
    release:
        runs-on: ubuntu-latest
        env:
            GIT_USER_NAME: ${{ vars.GIT_USER_NAME }}
            GIT_USER_EMAIL: ${{ vars.GIT_USER_EMAIL }}
        steps:
            -   uses: actions/checkout@v4
                with:
                    token: ${{ secrets.GITHUB_TOKEN }}
            -   uses: actions/setup-java@v4
                with:
                    java-version: 8
                    distribution: temurin
            -   uses: dhkatz/get-version-action@v3.0.0
                id: get_version
            -   uses: micronaut-projects/github-actions/pre-release@master
                with:
                    token: ${{ secrets.GITHUB_TOKEN }}
            -   name: Publish to Sonatype OSSRH
                env:
                    SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
                    SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
                    SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
                    SECRING_FILE: ${{ secrets.SECRING_FILE }}
                    SIGNING_KEY_ID: ${{ secrets.SIGNING_KEY_ID }}
                    SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
                    SIGNING_FILE: ${{ github.workspace }}/secring.pgp
                    RELEASE_VERSION: ${{ steps.get_version.outputs.version-without-v }}
                run: |
                    echo "${SECRING_FILE}" | base64 -d > "${SIGNING_FILE}"
                    echo "Publishing Artifacts for $RELEASE_VERSION"
                    (set -x; ./gradlew -Pversion="${RELEASE_VERSION}" publishToSonatype closeAndReleaseSonatypeStagingRepository --no-daemon)
                    rm  "${SIGNING_FILE}"
    bump-version:
        runs-on: ubuntu-latest
        needs: release
        env:
            GIT_USER_NAME: ${{ vars.GIT_USER_NAME }}
            GIT_USER_EMAIL: ${{ vars.GIT_USER_EMAIL }}
        steps:
            -   uses: actions/checkout@v4
                with:
                    token: ${{ secrets.GITHUB_TOKEN }}
            -   uses: actions/setup-java@v4
                with:
                    java-version: 8
                    distribution: temurin
            -   uses: boxt/github-tag-action@2.11.0
                id: patch_version
                env:
                    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                    DEFAULT_BUMP: patch
                    DRY_RUN: true
            -   name: Set version in gradle.properties
                env:
                    NEXT_VERSION: ${{ steps.patch_version.outputs.tag }}
                run: |
                    echo "Preparing next snapshot as ${NEXT_VERSION}"
                    ./gradlew snapshotVersion -Pversion="${NEXT_VERSION}"
            -   uses: actions-js/push@master
                with:
                    github_token: ${{ secrets.GITHUB_TOKEN }}
                    author_name: ${{ vars.GIT_USER_NAME }}
                    author_email: $${ vars.GIT_USER_EMAIL }}
                    branch: master
                    message: 'Set project version to next SNAPSHOT'
    documenation:
        runs-on: ubuntu-latest
        needs: bump-version
        env:
            GIT_USER_NAME: ${{ vars.GIT_USER_NAME }}
            GIT_USER_EMAIL: ${{ vars.GIT_USER_EMAIL }}
        steps:
            -   uses: actions/checkout@v4
                with:
                    token: ${{ secrets.GITHUB_TOKEN }}
            -   uses: actions/setup-java@v4
                with:
                    java-version: 8
                    distribution: temurin
            -   uses: dhkatz/get-version-action@v3.0.0
                id: get_version
            -   uses: micronaut-projects/github-actions/export-gradle-properties@master
                id: asciidoctor
            -   uses: gradle/gradle-build-action@v2
                env:
                    RELEASE_VERSION: ${{ steps.get_version.outputs.version-without-v }}
                with:
                    arguments: -Pversion="${RELEASE_VERSION}" asciidoctor
            -   uses: micronaut-projects/github-pages-deploy-action@master
                if: success()
                env:
                    BETA: ${{ steps.get_version.outputs.isPrerelase }}
                    TARGET_REPOSITORY: ${{ github.repository }}
                    GH_TOKEN: ${{ secrets.GH_TOKEN }}
                    BRANCH: gh-pages
                    FOLDER: build/asciidoc
                    DOC_FOLDER: latest
                    COMMIT_EMAIL: ${{ vars.GIT_USER_EMAIL }}
                    COMMIT_NAME: ${{ vars.GIT_USER_NAME }}
                    VERSION: ${{ steps.get_version.outputs.version-without-v }}
            -   uses: micronaut-projects/github-actions/post-release@master
                if: success()
                with:
                    token: ${{ secrets.GH_TOKEN }}
